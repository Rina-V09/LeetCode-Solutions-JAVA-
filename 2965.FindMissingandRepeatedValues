//USING HASHSET

class Solution {
    public int[] findMissingAndRepeatedValues(int[][] grid) {
        HashSet<Integer> set=new HashSet<>();
        int n=grid.length;
        int sq=n*n;
        int curSum=0;
        int ans[] = new int[2];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(set.contains(grid[i][j])){
                 ans[0]=grid[i][j];
                }else{
                    set.add(grid[i][j]);
                    curSum+=grid[i][j];
                }
            }
        }
        int totalSum=sq*(sq+1)/2;
        ans[1]=totalSum-curSum;
        return ans;
    }
}



//USING ARRAY
class Solution {
    public int[] findMissingAndRepeatedValues(int[][] grid) {
        //HashSet<Integer> set=new HashSet<>();
        int n=grid.length;
        int sq=n*n;
        int set[]=new int[sq+1];
        int curSum=0;
        int ans[] = new int[2];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                //if(set.contains(grid[i][j])){
                if(set[grid[i][j]]!=0){
                 ans[0]=grid[i][j];
                }else{
                    //set.add(grid[i][j]);
                    set[grid[i][j]]=1;
                    curSum+=grid[i][j];
                }
            }
        }
        int totalSum=sq*(sq+1)/2;
        ans[1]=totalSum-curSum;
        return ans;
    }
}
